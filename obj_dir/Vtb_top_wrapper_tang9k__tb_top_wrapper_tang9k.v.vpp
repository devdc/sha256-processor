`begin_keywords "1800-2023"
`line 1 "src/tb_top_wrapper_tang9k.v" 1
`timescale 1ns/1ps
 
 
 
module tb_top_wrapper_tang9k;

`line 7 "src/tb_top_wrapper_tang9k.v" 0
     
     
     
    localparam real CLK_FREQ   = 27_000_000.0;    
    localparam real BAUD_RATE  =   115_200.0;     
    localparam real CLK_PERIOD = 1e9 / CLK_FREQ;  
    localparam real BIT_PERIOD = 1e9 / BAUD_RATE; 

`line 15 "src/tb_top_wrapper_tang9k.v" 0
     
     
     
    reg  clk      = 1'b0;
    reg  rst_n    = 1'b0;         
    reg  uart_rx  = 1'b1;         
    wire uart_tx;
    wire led0;

`line 24 "src/tb_top_wrapper_tang9k.v" 0
     
     
     
    top_wrapper_tang9k dut (
        .clk    (clk),
        .rst_n  (rst_n),
        .uart_rx(uart_rx),
        .uart_tx(uart_tx),
        .led0   (led0)
    );

`line 35 "src/tb_top_wrapper_tang9k.v" 0
     
     
     
    always #(CLK_PERIOD/2.0) clk = ~clk;

`line 40 "src/tb_top_wrapper_tang9k.v" 0
     
     
     
    initial begin
        rst_n = 1'b0;
        repeat (10) @(posedge clk);
        rst_n = 1'b1;
    end

`line 49 "src/tb_top_wrapper_tang9k.v" 0
     
     
     
    task automatic uart_send_byte (input [7:0] data);
        integer i;
        begin
             
            uart_rx = 1'b0; #(BIT_PERIOD);

`line 58 "src/tb_top_wrapper_tang9k.v" 0
             
            for (i = 0; i < 8; i = i + 1) begin
                uart_rx = data[i];
                #(BIT_PERIOD);
            end

`line 64 "src/tb_top_wrapper_tang9k.v" 0
             
            uart_rx = 1'b1;
            #(BIT_PERIOD);

`line 68 "src/tb_top_wrapper_tang9k.v" 0
             
            #(BIT_PERIOD);
        end
    endtask

`line 73 "src/tb_top_wrapper_tang9k.v" 0
     
     
     
     
    integer j;
    integer fd;
    initial fd = $fopen("uart_tx_log.txt", "w");
    reg [7:0] rx_byte;

`line 82 "src/tb_top_wrapper_tang9k.v" 0
    initial begin : RX_MONITOR
        forever begin
             
            @(negedge uart_tx);
            #(BIT_PERIOD/2);   

`line 88 "src/tb_top_wrapper_tang9k.v" 0
            for (j = 0; j < 8; j = j + 1) begin
                #(BIT_PERIOD);
                rx_byte[j] = uart_tx;
            end
            #(BIT_PERIOD);     

`line 94 "src/tb_top_wrapper_tang9k.v" 0
            $fwrite(fd, "%02x ", rx_byte);
            $display($time, " ns : RX 0x%02x", rx_byte);
        end
    end

`line 99 "src/tb_top_wrapper_tang9k.v" 0
     
     
     
    initial begin
         
        @(posedge rst_n);
        @(posedge clk);
        uart_send_byte(8'h01);  
         
        uart_send_byte(8'h54);  
        uart_send_byte(8'h45);  
        uart_send_byte(8'h53);  
        uart_send_byte(8'h54);  
        uart_send_byte(8'hFF);  

`line 114 "src/tb_top_wrapper_tang9k.v" 0
         
        #(BIT_PERIOD * 100);

`line 117 "src/tb_top_wrapper_tang9k.v" 0
        $display("Simulation complete.");
        $finish;
    end

`line 121 "src/tb_top_wrapper_tang9k.v" 0
     
     
     
    initial begin
        #100_000_000;
        $display("Timeout â€“ ending simulation.");
        $finish;
    end

`line 130 "src/tb_top_wrapper_tang9k.v" 0
endmodule

`line 132 "src/tb_top_wrapper_tang9k.v" 0
